# -*- coding: utf-8 -*-
"""heart_disease_pred_ml.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10LIt1eCpeaTqPWcEnsc8-LFDEZYEfKU3
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression

dataset = pd.read_csv("/content/Heart_Disease_Prediction.csv")

dataset.head()

dataset['Heart Disease'] = dataset['Heart Disease'].map({'Presence':1, 'Absence':0})

dataset.head()

dataset.shape

dataset.info()

dataset.describe()

dataset['Heart Disease'].value_counts()

X = dataset.drop(columns= 'Heart Disease', axis=1)
Y = dataset['Heart Disease']

print(X)

print(Y)

X_train, X_test, Y_train , Y_test = train_test_split(X, Y , test_size = 0.2, stratify=Y, random_state=2)

print(X.shape, X_train.shape, X_test.shape)

model = LogisticRegression()

model.fit(X_train, Y_train)

##acccuracy score

#accuracy score on traning data

X_train_prediction = model.predict(X_train)
traning_data_accuracy = accuracy_score(X_train_prediction, Y_train)

print("accuracy score on traning data :-" , traning_data_accuracy)

##accuracy score on test data

X_test_prediction = model.predict(X_test)
test_data_accuracy = accuracy_score(X_test_prediction, Y_test)

print(test_data_accuracy)

###predictive system

data = (70	,1,	2,	156,	245,	0,	2,	143,	0,	0,	1,	0,	3)

data_numpy = np.asarray(data)
data_reshape = data_numpy.reshape(1, -1)

prediction = model.predict(data_reshape)
print(prediction)

if (prediction[0] ==0):
  print("person does not have heart disease")

else:
  print("person have heart disease")

import pickle

filename = 'trained_model.sav'
pickle.dump(model, open(filename, 'wb'))

load_model = pickle.load(open('trained_model.sav', 'rb'))

data = (70	,1,	2,	156,	245,	0,	2,	143,	0,	0,	1,	0,	3)

data_numpy = np.asarray(data)
data_reshape = data_numpy.reshape(1, -1)

prediction = load_model.predict(data_reshape)
print(prediction)

if (prediction[0] ==0):
  print("person does not have heart disease")

else:
  print("person have heart disease")